@using Model.Models
@model Dialogue

@using (Html.BeginForm("Edit", "Dialogue"))
{
    Html.RenderAction("GetAll", "Language", new { viewData = ViewData });
    var languages = ViewData["Language"] as ICollection<Language>;
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.AutorId)

            <div class="form-group">
                @Html.Label("Nazwa", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Język", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.LanguageId, new SelectList(languages, "Id", "Name"), new { @class = "btn btn-primary dropdown-toggle" })
                    @Html.ValidationMessageFor(model => model.LanguageId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Zapisz" class="btn btn-success" />
                </div>
            </div>
        </div>
        }
