@model Model.Models.Issue

<div>
    
    <audio id="preview @Model.IssueId" controls></audio> 

    <button id="record @Model.IssueId" onclick="recorder(@Model.IssueId)">Record</button>
    <button id="stop @Model.IssueId"  onclick="stoping()" disabled>Stop</button>
    <div id="container @Model.IssueId"></div>

    @Scripts.Render("~/bundles/Record")
    <script>
        var $idIssue;

        var record;
        var stop;
        var preview;
        var container;


        function PostBlob(blob, fileType, fileName) {

            const formData = new FormData();

            var hr = document.createElement('hr');
            container.appendChild(hr);

            formData.append(fileType + '-filename', fileName);
            formData.append(fileType + '-blob', blob);


            var strong = document.createElement('strong');
            strong.id = 'percentage';
            strong.innerHTML = fileType + ' upload progress: ';
            container.appendChild(strong);
            var progress = document.createElement('progress');
            container.appendChild(progress);

            // POST the Blob using XHR2
            xhr('/AudioFile/PostRecordedAudioVideo?IssueId=' + $idIssue,
                formData,
                progress,
                percentage,
                function(fName) {
                    progress.parentNode.removeChild(progress);
                    strong.parentNode.removeChild(strong);
                    hr.parentNode.removeChild(hr);
                });
        }



        // if you want to record only audio on chrome
        // then simply set "isFirefox=true"
        var isFirefox = !!navigator.mozGetUserMedia;

        var recordAudio;
        function recorder(id) {
            $idIssue = id;

            record = document.getElementById('record '+ $idIssue);
            stop = document.getElementById('stop '+ $idIssue);

            preview = document.getElementById("preview " + $idIssue);

            container = document.getElementById('container '+ $idIssue);

            record.disabled = true;
            navigator.getUserMedia({
                    audio: true,
                    video: false
                },
                function(stream) {
                    preview.src = window.URL.createObjectURL(stream);
                    preview.play();

                    recordAudio = RecordRTC(stream,
                    {
                        onAudioProcessStarted: function() {
                        }
                    });

                    recordAudio.startRecording();

                    stop.disabled = false;
                },
                function(error) {
                    alert(JSON.stringify(error, null, '\t'));
                });
        };

        var fileName;
        function stoping() {
            record.disabled = false;
            stop.disabled = true;

            preview.src = '';

            fileName = 1;

            recordAudio.stopRecording(function() {
                PostBlob(recordAudio.getBlob(), 'audio', fileName + '.wav');
            });

        };

        function xhr(url, data, progress, percentage, callback) {
            var request = new XMLHttpRequest();
            request.onreadystatechange = function() {
                if (request.readyState == 4 && request.status == 200) {
                    callback(request.responseText);
                }
            };
            request.responseType = data.type;

            if (url.indexOf('/RecordRTC/DeleteFile') == -1) {
                request.upload.onloadstart = function() {
                    percentage.innerHTML = 'Upload started...';
                };

                request.upload.onprogress = function(event) {
                    progress.max = event.total;
                    progress.value = event.loaded;
                    percentage.innerHTML = 'Upload Progress ' + Math.round(event.loaded / event.total * 100) + "%";
                };

                request.upload.onload = function() {
                    percentage.innerHTML = 'Saved!';
                };
            }

            request.open('POST', url);
            request.send(data);
        }

        window.onbeforeunload = function() {
            if (!!fileName) {
                return 'It seems that you\'ve not deleted audio/video files from the server.';
            }
        };
    </script>
</div>
