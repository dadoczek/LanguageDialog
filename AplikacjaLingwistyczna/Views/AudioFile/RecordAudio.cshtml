@model Model.Models.Issue

<div>
    <button onclick="startRecording(this);">record</button>
    <button onclick="stopRecording(this, @Model.IssueId, @Model.DialogueId);" disabled>stop</button>

    <ul id="recordingslist @Model.IssueId"></ul>

    <script>

  var audio_context;
  var recorder;

  function startUserMedia(stream) {
    var input = audio_context.createMediaStreamSource(stream);

    recorder = new Recorder(input);
  }

  function startRecording(button) {
    recorder && recorder.record();
    button.disabled = true;
    button.nextElementSibling.disabled = false;
  }

  function stopRecording(button, id, dialogueId) {
    recorder && recorder.stop();
    button.disabled = true;
    button.previousElementSibling.disabled = false;

    createDownloadLink(id, dialogueId);

    recorder.clear();
  }

  function createDownloadLink(id, dialogueId) {
    recorder && recorder.exportWAV(function(blob) {
      var url = URL.createObjectURL(blob);
      var li = document.createElement('li');
      var au = document.createElement('audio');
      var hf = document.createElement('a');



      var root = document.getElementById("recordingslist " + id);
      while (root.firstChild) {
          root.removeChild(root.firstChild);
      }

      au.controls = true;
      au.src = url;
      hf.href = url;
      hf.download = new Date().toISOString() + '.wav';
      hf.innerHTML = hf.download;

      debugger;
        var dataToBlob;
        var reader = new window.FileReader();
        reader.readAsDataURL(url);
        reader.onloadend = function() {
            dataToBlob = reader.result;
        };

      $.ajax({
          url: '@Url.Action("AudioRecordSave", "AudioFile")',
          type: "POST",
          data: { data: reader.result },
          success: function (data) {
              
          },
          error: function (xhr, ajaxOptions, thrownError) {
              alert(xhr.responseText);

          }
      });

      var file = document.getElementById("file" + id);
      file.value = "";

      var urlImput = document.getElementById("url" + id);
      urlImput.value = url;

      li.appendChild(au);
      li.appendChild(hf);
      root.appendChild(li);
    });
  }

  window.onload = function init() {
    try {
      // webkit shim
      window.AudioContext = window.AudioContext || window.webkitAudioContext;
      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;
      window.URL = window.URL || window.webkitURL;

      audio_context = new AudioContext;
    } catch (e) {
      alert('Nagrywanie audio nie jest obsługiwane na wybranej przeglądarce');
    }

    navigator.getUserMedia({audio: true}, startUserMedia, function(e) {
    });
  };
    </script>

    @Scripts.Render("~/bundles/Record")
</div>
